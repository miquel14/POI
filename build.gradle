// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'config/buildsystem/dependencies.gradle'

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.5.6'
        classpath 'com.github.triplet.gradle:play-publisher:1.1.5'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

    }
}

apply plugin: "org.sonarqube"

sonarqube {
    properties {
        property "sonar.host.url", "https://kazan.priv.atos.fr/sonar/"
        property "sonar.jdbc.url", "jdbc:postgresql://pgpkaz93.kazan.priv.atos.fr:5432/kazan_sonar"
        property "sonar.jdbc.username", "kazan_sonar"
        property "sonar.jdbc.password", "S0n@r"
        property "sonar.login", "kazanadmin"
        property "sonar.password", "4dm|n"
        property "sonar.projectName", "T21 Base Project"                        // TODO: Change to Project Name
        property "sonar.projectKey", "com.worldline:t21-base-project"           // TODO: Change to Project ID
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "app/src/main/java,domain/src/main/java,data/src/main/java"   // TODO: set paths of project.
        property "sonar.exclusions",
                "build/**,**/*.png,**/test/*, app/build/**, app/src/test/**, app/src/androidTest/**,  data/build/**, " +
                        "data/src/test/**, data/src/androidTest/**, domain/src/test, domain/build/**" // TODO: set paths.
        property "sonar.import_unknown_files", true
        property "sonar.android.lint.report", "./build/reports/lint/lint-report.xml"
    }
}

def getSignFile(String file) {
    Properties properties = readFile(file)
    return properties.getProperty("KEYSTORE_FILE")
}

def getSignFilePassword(String file) {
    Properties properties = readFile(file)
    return properties.getProperty("KEYSTORE_PASSWORD")
}

def getSignAlias(String file) {
    Properties properties = readFile(file)
    return properties.getProperty("KEY_ALIAS")
}

def getSignAliasPassword(String file) {
    Properties properties = readFile(file)
    return properties.getProperty("KEY_PASSWORD")
}

def getVersionName(String file) {
    Properties properties = readFile(file)
    return properties.getProperty("T21_APP_VERSION")
}

def readFile(String file) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file(file).newDataInputStream())
    return properties
}

allprojects {
    ext {
        androidApplicationId = 'com.worldline.template.clean'
        androidVersionCode = 0
        androidVersionName = "0"
    }
    repositories {
        jcenter()

        maven { // another repository. Our nexus
//            credentials {
            // Nexus in Kazan doesn't need credentials, but keep these lines commented for other cases
//                username = KAZAN_NEXUS_USERNAME
//                password = KAZAN_NEXUS_PASSWORD
//            }
            url 'https://kazan.atosworldline.com/nexus/content/repositories/mobile-releases/'   //TODO: Remove this line.
//            url KAZAN_NEXUS_URL + KAZAN_NEXUS_REPO_RELEASE
            // url of our nexus repository. This variables should be defined in Gitlab --> Settings --> Variables
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}
